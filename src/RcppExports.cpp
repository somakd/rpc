// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// colMSD_dgc
NumericVector colMSD_dgc(S4 mat, NumericVector m);
RcppExport SEXP _rpc_colMSD_dgc(SEXP matSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(colMSD_dgc(mat, m));
    return rcpp_result_gen;
END_RCPP
}
// colMSD_matrix
NumericVector colMSD_matrix(NumericMatrix X, NumericVector meanX);
RcppExport SEXP _rpc_colMSD_matrix(SEXP XSEXP, SEXP meanXSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type meanX(meanXSEXP);
    rcpp_result_gen = Rcpp::wrap(colMSD_matrix(X, meanX));
    return rcpp_result_gen;
END_RCPP
}
// compute_rpc
NumericVector compute_rpc(SEXP Z, NumericVector colMeansZ, NumericVector rowSumS, NumericVector y, NumericVector D, NumericVector theta, int ncores);
RcppExport SEXP _rpc_compute_rpc(SEXP ZSEXP, SEXP colMeansZSEXP, SEXP rowSumSSEXP, SEXP ySEXP, SEXP DSEXP, SEXP thetaSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type colMeansZ(colMeansZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rowSumS(rowSumSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type D(DSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_rpc(Z, colMeansZ, rowSumS, y, D, theta, ncores));
    return rcpp_result_gen;
END_RCPP
}
// __getXXt_dense__
NumericMatrix __getXXt_dense__(NumericMatrix mat, NumericVector mX, NumericVector Dvec, int ncores, int chunksize);
RcppExport SEXP _rpc___getXXt_dense__(SEXP matSEXP, SEXP mXSEXP, SEXP DvecSEXP, SEXP ncoresSEXP, SEXP chunksizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mX(mXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Dvec(DvecSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    Rcpp::traits::input_parameter< int >::type chunksize(chunksizeSEXP);
    rcpp_result_gen = Rcpp::wrap(__getXXt_dense__(mat, mX, Dvec, ncores, chunksize));
    return rcpp_result_gen;
END_RCPP
}
// __getXXt_sparse__
NumericMatrix __getXXt_sparse__(S4 mat, NumericVector D, int ncores, int chunksize);
RcppExport SEXP _rpc___getXXt_sparse__(SEXP matSEXP, SEXP DSEXP, SEXP ncoresSEXP, SEXP chunksizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    Rcpp::traits::input_parameter< int >::type chunksize(chunksizeSEXP);
    rcpp_result_gen = Rcpp::wrap(__getXXt_sparse__(mat, D, ncores, chunksize));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rpc_colMSD_dgc", (DL_FUNC) &_rpc_colMSD_dgc, 2},
    {"_rpc_colMSD_matrix", (DL_FUNC) &_rpc_colMSD_matrix, 2},
    {"_rpc_compute_rpc", (DL_FUNC) &_rpc_compute_rpc, 7},
    {"_rpc___getXXt_dense__", (DL_FUNC) &_rpc___getXXt_dense__, 5},
    {"_rpc___getXXt_sparse__", (DL_FUNC) &_rpc___getXXt_sparse__, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_rpc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
